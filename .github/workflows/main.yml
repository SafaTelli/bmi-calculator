name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name : build and test
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          # Set always-auth in npmrc
          node-version: 10.15.1
          # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version
      - name: checkout code  
        uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: build
        run: make start
      - name: test
        run: make test
      - name: docker build
        run: docker build -t bmi-aks:'${{github.sha}}' .
    
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_LOGIN}}
          password: ${{secrets.DOCKER_PWD}}
      
      - name: tag docker image
        run: docker tag bmi-aks:'${{github.sha}}' '${{secrets.DOCKER_LOGIN}}'/bmi-aks:'${{github.sha}}'
    
      - name: push docker image
        run: docker push '${{secrets.DOCKER_LOGIN}}'/bmi-aks:'${{github.sha}}'
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1.1
        with:
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: ${{secrets.AZURE_CREDENTIALS}}
          # Resource Group Name
          resource-group: bmi-aks 
          # AKS Cluster Name
          cluster-name: bmi-cluster
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v2
        with:
          container-registry-url: https://index.docker.io/v1/
          # Container registry username
          container-registry-username: '${{secrets.DOCKER_LOGIN}}'
          # Container registry password
          container-registry-password:  '${{secrets.DOCKER_PWD}}'
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          # Type of Kubernetes secret. For example, docker-registry or generic
          secret-type: docker-registry
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: docker-image-pull-secret
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1
        with:        
        # Path to the manifest files which will be used for deployment.
          manifests:
            k8s/deployment.yml
            k8s/service.yml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: '${{secrets.DOCKER_LOGIN}}/bmi-aks:${{github.sha}}'
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: docker-image-pull-secret
          # deploy/promote/reject
          action: deploy
           
